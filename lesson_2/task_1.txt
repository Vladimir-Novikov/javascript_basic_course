Почему код дает именно такие результаты?

var a = 1 , b = 1 , c, d;
c = ++a; alert(c);                // 2
d = b++; alert(d);               // 1
c = ( 2 + ++a); alert(c);    // 5
d = ( 2 + b++); alert(d);   // 4
alert(a);                                // 3
alert(b);                                // 3

Здесь представленны две формы инкремента: префиксная и постфиксная.

c = 1 + 1  это префиксная форма, JS производит инкрементирование сразу (даже если мы бы вывели это число сразу в alert)
d = b++ ==> выводит значение (возвращает значение) b равное 1, а уже потом производит увеличение значения на 1, поэтому мы видим еще старое значение (постфиксная форма)
c = ( 2 + ++a) а уже равно 2, это было сделано в 1 строке. К этому значению мы прибавили 2 и еще прибавили единицу префиксной записью с = (2 + (1+2)) = 5
d = ( 2 + b++) b было равно 1, потом во второй строке мы прибавили еще единицу. Получаем выражение d = (2 + (2 + 1)) но т.к. здесь запись постфиксная, то мы получим только старое значение
		, а увеличение на 1 увидим в последней строке.
a увеличили в 1 строке на 1, потом в третьей. Итого 3
b увеличивали значение во 2 строке и четвертой, но в 4 строке значение вывелось старое, а здесь мы уже получили конечную сумму всех инкрементов. 
